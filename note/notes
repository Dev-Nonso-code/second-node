const express = require("express")
const ejs = require("ejs")
const bodyParser = require("body-parser")
const mongoose = require("mongoose")
const app = express()
app.use(bodyParser.urlencoded({ extended: false }))
app.use(bodyParser.json())
app.set("view engine", "ejs")
// const mongoose = require("mongoose")




 let userSchema = mongoose.Schema({
    firstName: String,
    lastName: String,
    email: {type: String, require: true, unique: true },
    password: String
 })

 let userModel = mongoose.models.user_tbs || mongoose.model
 ("user_tbs", userSchema)

 app.get("/singup", (req, res)=> {
    res.render("singup", {message: ""})
 })

 app.post("/singup", async (req, res)=>{
    let data = req.body
    let form = new userModel(data)
    await form.save().then((result)=>{
        console.log(result)
    })
    res.redirect("/login")
 }).catch((err) => {
    console.log(err)
    res.render("singup", {message: "singup faild"})
    next()
 })

 app.get("/singup", (req, res, next) => {
    res.render("login", {message: ""})
 })

 app.post("/login", async(req, res, next) => {
    let data = req.body
    let email = data.email
    let password = data.password
    await userModel.fineOne({email:email}).then((result)=>{
        if(result.password == password){
            res.render("login", {message: "Log In successful"})
        }else{
            res.render("login", {message: "Invaild password"})
        }
    }).catch((err)=>{
        console.log(err)
        res.render("login", {message: "Account dosen't exist"})
        next()       
    })
 })

 const uri = "mongodb+srv://First-Class:11480494@cluster0.pzhpnvm.mongodb.net/First-Class?retryWrites=true&w=majority"

const connect = async ()=>{
    try{
        console.log("Mongoose don connect");
        mongoose.set("stricQuery", false)
        await mongoose.connect(uri).then((result) => {
           //  console.log(result);
            console.log("Mongoose don connect")
        })
    } catch (error) {
        console.log(error);
    }
}

connect()

app.listen("7000", ()=>{
    console.log("server don start");
})
